
### Example Verilog Code for 2-to-4 and 3-to-8 Decoders
```verilog
// 2-to-4 Decoder Module
module decoder_2to4 (
    input wire A, B,
    output wire [3:0] Y
);
    assign Y[0] = ~A & ~B;
    assign Y[1] = ~A & B;
    assign Y[2] = A & ~B;
    assign Y[3] = A & B;
endmodule

// 3-to-8 Decoder Module
module decoder_3to8 (
    input wire A, B, C,
    output wire [7:0] Y
);
    assign Y[0] = ~A & ~B & ~C;
    assign Y[1] = ~A & ~B & C;
    assign Y[2] = ~A & B & ~C;
    assign Y[3] = ~A & B & C;
    assign Y[4] = A & ~B & ~C;
    assign Y[5] = A & ~B & C;
    assign Y[6] = A & B & ~C;
    assign Y[7] = A & B & C;
endmodule

// Testbench
module testbench;
    reg A, B, C;
    wire [3:0] Y2;
    wire [7:0] Y3;

    decoder_2to4 dec2 (.A(A), .B(B), .Y(Y2));
    decoder_3to8 dec3 (.A(A), .B(B), .C(C), .Y(Y3));

    initial begin
        $monitor("A=%b B=%b C=%b | 2-to-4: Y=%b | 3-to-8: Y=%b", A, B, C, Y2, Y3);
        
        A = 0; B = 0; C = 0; #10;
        A = 0; B = 1; C = 1; #10;
        A = 1; B = 0; C = 1; #10;
        A = 1; B = 1; C = 1; #10;
        
        $finish;
    end
endmodule
